// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id
  email         String          @unique
  name          String?
  games         Game[]
  createdAt     DateTime        @default(now())
  PlayerStats   PlayerStats?
  CategoryStats CategoryStats[]
}

model PlayerStats {
  id         String   @id
  totalGames Int      @default(0)
  totalScore Int      @default(0)
  maxScore   Int      @default(0)
  userId     String   @unique
  user       User     @relation(fields: [userId], references: [id])
  updatedAt  DateTime @updatedAt
}

model Category {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  games         Game[]
  CategoryStats CategoryStats[]
}

model CategoryStats {
  id         Int      @id @default(autoincrement())
  totalGames Int      @default(0)
  correct    Int      @default(0)
  incorrect  Int      @default(0)
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  updatedAt  DateTime @updatedAt
}

model Game {
  id         Int      @id @default(autoincrement())
  score      Int
  correct    Int
  incorrect  Int
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
}
